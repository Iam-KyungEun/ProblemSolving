#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int MAX = 5005;
int check[MAX];
int sum[MAX];

bool cmp(const int &a, const int &b){
	return a<b;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);

	int N,K,Q,M;
	vector <int> k;
	vector <int> q;
	vector <int> s;
	vector <int> e;

	cin>>N>>K>>Q>>M;
	
	k.assign(K,0);
	q.assign(Q,0);
	s.assign(M,0);
	e.assign(M,0);
	
	for(int i=0;i<K;i++){
		cin>>k[i];
	}
	
	for(int i=0;i<Q;i++){
		cin>>q[i];
	}
	for(int i=0;i<M;i++){
		cin>>s[i]>>e[i];
	}

	for(int i=0;i<k.size();i++){
		check[k[i]] = -1;
	}

	sort(q.begin(), q.end(), cmp);

	for(int i=0;i<q.size();i++){
		int num=q[i];
		if(check[num] == 0){
			for(int j=num;j<=N+2;j+=num){
				if(check[j] != -1) check[j]=1;
			}
		}
	}

	for(int i=3;i<=N+2;i++){
		if(check[i] != 1) {
			sum[i] = sum[i-1] + 1;
		}
		else sum[i] = sum[i-1];
	}
	for(int i=0;i<M;i++){
		cout<<sum[e[i]]-sum[s[i]-1]<<'\n';
	}

	return 0;
}
