#include <iostream>
#include <queue>
#include <cstring>

using namespace std;

const int MAX = 1001;

int box[MAX][MAX];
int check[MAX][MAX];

int dy[4]={-1,1,0,0};
int dx[4]={0,0,-1,1};
int day=1;
int N,M;
queue < pair<int,int> > Q;

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
		
	cin>>N>>M;
	for(int i=0;i<M;i++){
		for(int j=0;j<N;j++){
			cin>>box[i][j];
		}
	} 
	for(int i=0;i<M;i++){
		for(int j=0;j<N;j++){
			if(box[i][j]==1){
				Q.push({i,j});
				check[i][j]=1;
			}
		}
	}
	
	while(!Q.empty()){
		int Y=Q.front().first;
		int X=Q.front().second;
		Q.pop();
		for(int i=0;i<4;i++){
			int ny=Y+dy[i];
			int nx=X+dx[i];
			if(ny>=0 && nx>=0 && ny<M && nx<N && check[ny][nx]==0 && box[ny][nx]==0){
				box[ny][nx]=1;
				check[ny][nx]=check[Y][X]+1;
				if(check[ny][nx]>day) day=check[ny][nx];
				Q.push({ny,nx});
			}
		}
	}
	
	for(int i=0;i<M;i++){
		for(int j=0;j<N;j++){
			if(box[i][j]==0){
				cout<<-1;
				return 0;
			}
		}
	}
	cout<<day-1;
	return 0;
}
