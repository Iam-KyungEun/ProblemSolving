#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

bool check[27];
char arr[27];
char result[27];
int L,C;

void dfs(int idx,int vowel,int consonant){
	if(idx>=L){
		if(vowel>=1 && consonant >=2){
			for(int i=0;i<L;i++) cout<<result[i];
			cout<<'\n';
		}
	}
	else{
		for(int i=0;i<C;i++){
			if(!check[arr[i]-'a']){
				if(idx>0 && result[idx-1]>arr[i]) continue;
				
				result[idx]=arr[i];
				check[arr[i]-'a']=true;
				if(arr[i]=='a' || arr[i]=='e' || arr[i]=='i'
					|| arr[i]=='u' || arr[i]=='o') dfs(idx+1,vowel+1,consonant);
				else dfs(idx+1,vowel,consonant+1);				
				check[arr[i]-'a']=false;	
			}
		}
	}
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	cin>>L>>C;
	for(int i=0;i<C;i++){
		cin>>arr[i];
	}
	sort(arr,arr+C);
	dfs(0,0,0);
	
	return 0;
}
