#include <string>
#include <map>
#include <vector>

using namespace std;

void parse(string str, vector<string>& data,string delimiter){
    int pos=0;
    string token;
    while((pos=str.find(delimiter))!=string::npos){
        token=str.substr(0,pos);
        data.push_back(token);
        str.erase(0,pos+delimiter.length());
    }
    data.push_back(str);
}

vector<string> solution(vector<string> record) {
    vector<string> answer;
    vector <pair<string,string>> v;
    map <string,string> m;
    string delimiter(" ");
    for(int i=0;i<record.size();i++){
        vector<string> temp;
        parse(record[i],temp,delimiter);
       
        if(temp[0]=="Enter"){
            v.push_back(make_pair(temp[0],temp[1]));
            m[temp[1]]=temp[2];
        }
        else if(temp[0]=="Leave"){
            v.push_back(make_pair(temp[0],temp[1]));
        }
        else if(temp[0]=="Change"){
            m[temp[1]]=temp[2];
        }
    }
    for(int i=0;i<v.size();i++){
        if(v[i].first=="Enter") answer.push_back(m[v[i].second]+"님이 들어왔습니다.");
        else if(v[i].first=="Leave") answer.push_back(m[v[i].second]+"님이 나갔습니다.");
    }
    return answer;
}
