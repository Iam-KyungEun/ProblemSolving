#include <iostream>
#include <queue>
using namespace std;

const int MAX = 101;

int box[MAX][MAX][MAX];
int check[MAX][MAX][MAX];
int dy[6]={-1,1,0,0,0,0};
int dx[6]={0,0,-1,1,0,0};
int dz[6]={0,0,0,0,-1,1};
int M,N,H;

struct point{
	int z;
	int y;
	int x;
};


int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);

	queue <point> Q;
	int maxday=-1;
	
	cin>>M>>N>>H;
	
	for(int k=0;k<H;k++){
		for(int i=0;i<N;i++){
			for(int j=0;j<M;j++){
				cin>>box[k][i][j];
				if(box[k][i][j]==1){
					Q.push({k,i,j});
					check[k][i][j]=1;
				}
			}
		}
	}
	
	while(!Q.empty()){
		int z=Q.front().z;
		int y=Q.front().y;
		int x=Q.front().x;
		
		Q.pop();
		for(int d=0;d<6;d++){
			int nz=z+dz[d];
			int ny=y+dy[d];
			int nx=x+dx[d];
			if(nz>=0 && nz<H && ny>=0 && ny<N && nx>=0 && nx<M && box[nz][ny][nx]==0 && check[nz][ny][nx]==0){
				if(box[nz][ny][nx]==0) {
					box[nz][ny][nx]=1;
					check[nz][ny][nx]=check[z][y][x]+1;
				}
				Q.push({nz,ny,nx});
			}
		}
	}
	
	for(int k=0;k<H;k++){
		for(int i=0;i<N;i++){
			for(int j=0;j<M;j++){
				if(box[k][i][j]==0){
					cout<<-1;
					return 0;
				}
				if(check[k][i][j]>maxday) maxday= check[k][i][j];
			}
		}
	}	
	cout<<maxday-1;
	return 0;
}
