#include <iostream>

using namespace std;

int map[20][20];

bool checkvert(int y,int x){
	//세로로 같은 값이 있는 지 확인
	int color = map[y][x]; 
	int cnt=1;
	for(int i=y+1;i<=19;i++){
		if(map[i][x]==color) cnt++;
		else break;
	}
	for(int i=y-1;i>=1;i--){
		if(map[i][x]==color) cnt++;
		else break;
	}
	if(cnt==5) return true;
	else return false;
}

bool checkhori(int y,int x){
  // 가로로 같은 값이 있는지 확인
	// y값 고정, x값만 키우고 줄 
	int color = map[y][x]; 
	int cnt=1;
	for(int j=x+1;j<=19;j++){
		if(map[y][j]==color) cnt++;
		else break;
	}
	for(int j=x-1;j>=1;j--){
		if(map[y][j]==color) cnt++;
		else break;
	}
	if(cnt==5) return true;
	else return false;
}

bool checkdiv(int y,int x){
	int color = map[y][x];
	// 대각선 /
	int i=y,j=x;
	int cnt=1;
	while(1){
		i++;
		j++;
		if(i>19 || j>19) break;
		if(map[i][j]==color) cnt++;
		else break;
	}
	i=y; j=x;
	while(1){
		i--;
		j--;
		if(i<1 || j<1) break;
		if(map[i][j]==color) cnt++;
		else break;
	}
	if(cnt==5) return true;
	
  // 대각선 왼쪽에서 오른쪽방향
	i=y; j=x;
	cnt=1;
	while(1){
		i++;
		j--;
		if(i>19 || j<1) break;
		if(map[i][j]==color) cnt++;
		else break;
	}
	i=y; j=x;
	while(1){
		i--;
		j++;
		if(i<1|| j>19) break;
		if(map[i][j]==color) cnt++;
		else break;
	}
	if(cnt==5) return true;
	else return false;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	int N,y,x;
	cin>>N;
	// map이 1이면 흑, 2이면 백
	int color=1;
	for(int i=0;i<N;i++){
		cin>>y>>x;
		map[y][x]=color;
		if(color==2) color=1;
		else color=2;
		if(checkhori(y,x) || checkvert(y,x) || checkdiv(y,x)) {
			cout<<i+1;
			return 0;
		}
	}
	cout<<-1;
	return 0;
}
