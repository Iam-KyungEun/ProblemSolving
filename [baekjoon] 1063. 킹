#include <iostream>
#include <string>

using namespace std;

int dy[8]={1,-1,0,0,1,-1,1,-1};  // ↑↓←→↗↙↖↘	 
int dx[8]={0,0,-1,1,1,-1,-1,1};

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	
	string king="";
	string stone="";
	string command="";
	int N;
	
	cin>>king>>stone>>N;
	
	int kx = king[0]-'A'+1;
	int ky = king[1]-'0';
		
	int sx = stone[0]-'A'+1;
	int sy = stone[1]-'0';
	
	int dir;
	
	for(int i=0;i<N;i++){
		cin>>command;
		
		if(command=="R") dir = 3;
		else if(command=="L") dir = 2;
		else if(command=="B") dir = 1;
		else if(command=="T") dir = 0;
		else if(command=="LT") dir = 6;
		else if(command=="RT") dir = 4;
		else if(command=="RB") dir = 7;
		else if(command=="LB") dir = 5;
		
		int ny = ky+dy[dir];
		int nx = kx+dx[dir];
		
		if(ny<1 || nx<1 || ny>8 || nx>8) continue;
		
		if(ny==sy && nx==sx){ //돌이 있다면. 
			if(sy+dy[dir]<1 || sx+dx[dir]<1 || sy+dy[dir]>8 || sx+dx[dir]>8) continue;
			
			ky = ny;
			kx = nx;
			sy += dy[dir];
			sx += dx[dir];
		} else {
			ky = ny;
			kx = nx;
		}
	}
	
	king[0]=kx+'A'-1;
	king[1]=ky+'0';
	stone[0]=sx+'A'-1;
	stone[1]=sy+'0';
	
	cout<<king<<'\n'<<stone;
	
	return 0;
}
